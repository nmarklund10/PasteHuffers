
<!DOCTYPE html>
<html>
<body>
<style>
html {
  background: LightSteelBlue;
  background: -webkit-gradient(linear, left top, right bottom, from(#53e3a6), to(Lemonchiffon));
  font-size:100%;
}
html,input {
  font-family:Helvetica, sans-serif, Arial;
}

header{
    padding: 8px;
    color: white;
    background-color: #111;
    clear: left;
    text-align:10px;

}
footer{
    position: fixed;
    padding: 8px;
    left: 0;
    bottom: 0;
    width: 100%;
    color: white;
    background-color: #111;
    clear: left;
    text-align:center ;
}
body {
  margin:0;
}

div.transbox {
    margin: 20px;
    background: rgba(100, 225, 80, 0.3);
    border: 1px solid black;
    filter: alpha(opacity=30);
}

div.transbox p {
    margin: 1%;
    text-align: center;
    font-weight: bold;
    color: #black;
}

input {
  line-height:2em;
  font-size:1em;
  border:0;
  background:transparent;
  color: white;
  margin:0;
  height:1.5em;
  display:block;
  width:270px;
  padding:.5em .5em 1em;
}

input[type="password"] {
  padding:1em .5em .5em;
}

.spacer {
  height:0;
  border-bottom:3px solid #53e3a6;
  margin:0 0 0 5px;
}

input[type="submit"] {
  background-color:#111;
  color: white;
  position:absolute;
  bottom:35px;
  right:-15px;
  box-shadow:0 0 1px 4px #53e3a6;
  border-radius:50px;
  width:75px;
  height:50px;
  padding:0;
  -webkit-transition: all .1s linear;
  -o-transition: all .1s linear;
  -moz-transition: all .1s linear;
  -ms-transition: all .1s linear;
  -kthtml-transition: all .1s linear;
  transition: all .1s linear;
}

input[type="submit"]:hover {
  cursor:pointer;
  box-shadow:0 0 0.5px 8px #53e3a6;
  color: LimeGreen;
  -webkit-transition: all .1s linear;
  -o-transition: all .1s linear;
  -moz-transition: all .1s linear;
  -ms-transition: all .1s linear;
  -kthtml-transition: all .1s linear;
  transition: all .1s linear;
}

::-webkit-input-placeholder {
  color:#666;
}

input:focus {
  outline:0;
  color: LightSteelBlue
}
</style>
<header>
  <font size="20"><span style="display:inline-block; width: 30px;"></span>
    PasteHuffer</font>
</header>
 <div class="transbox">
    <p>Welcome Instructor.</p>
  </div>
  <script>
    /*
    * The setup() will be called by dojo right after it is finished loading all libraries.
    */
    function setup()
    {
        window.centerContainer = new window.TabContainer({style:"height:100%;"});
       
        // Set up create new course form first
        request.get('/courses/creationForm').then(
            function(response)
            {
                window.centerContainer.addChild(new window.ContentPane({title:"Create a New Course", content:response}));
            },
        function(err){console.log(err);});


        console.log("Grabbing Courses");
        // Send a request to the courses resource with the IUID in the query
        // Then pass in a call back for a succesful response and one for an error
        request("/courses/",{
            handleAs:"json"
        }).then(
        function(courses){
            // Parse the response given by the request
            window.courses = courses;
            
            // Iterate through each course object in the response
            for (var i=0;i<courses.length; i++)
            {
                // For each course, use its CUID to find all of the assignments
                // You can also POST data as necessary, see Dojo/Request docs to see how
                console.log("Grabbing Assignments for a course");
                request("/assignments/",{
                         "query":{"id":courses[i].id},
                         handleAs:"json"
                }).then(
                function(courseAssignMentDict){
                    // Recieve Course from service since this is asynchronusly run so the loop iterator may not be usable at the time this runs
                    // Parse the response
                    var innerContent = "<table>";
                    
                    // If given an empty list, still add the course as a title pane
                    console.log("Appending child");
                    if(courseAssignMentDict.assignments.length == 0)
                    {
                        window.centerContainer.addChild(new window.ContentPane({title:courseAssignMentDict.course.name,
                                                                         content:""}));
                    }
                    else
                    {
                        // For each assignment build its table row
                        for(var a in assignments)
                        {
                             innerContent+= "<tr><td>"+ a.name+"</td></tr>";
                        }
                        innerContent +="</table>";
                        window.centerContainer.addChild(new window.ContentPane({title:window.courses[i].name,content:innerContent}));
                    }
                },
                function(err){console.log(err)});
            }
            // After sending out requests for each course, place and start up the accordion container
            window.centerContainer.placeAt("centerContainer")
            window.centerContainer.startup();
        },
        function(err){console.log(err)});
    }

    function createCourseFromForm()
    {

    }
</script>
<div align="center" style="height:auto;">
    <div id="centerContainer" name="centerContainer"></div>
</div>
<footer>Texas A&amp;M University</footer>
</body>
</html>
